{"version":3,"sources":["components/Navbar.js","components/Sidebar.js","components/ImagePanel.js","components/Content.js","App.js","index.js"],"names":["Navbar","className","Sidebar","id","type","value","util","Instance","Init","canvasRef","console","log","Clear","ReDraw","loadedImage","getContext","drawImage","width","height","clearRect","ImagePanel","props","useState","outlined","setOutlined","useRef","useEffect","Outlined","current","LoadedImage","ref","style","border","Content","setLoadedImage","image","Image","onload","src","process","LoadImage","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAWeA,MARf,WACE,OACE,qBAAKC,UAAU,SAAf,SACE,kD,aCqBSC,MAxBf,WACE,OACE,sBAAKD,UAAU,gBAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,uBACEE,GAAG,oBACHF,UAAU,qBACVG,KAAK,SACLC,MAAM,mBAIV,qBAAKJ,UAAU,oBAEf,sBAAKA,UAAU,uBAAf,UACE,+BACE,6CAEF,qDClBFK,G,MAAO,CACXC,SAAU,KACVC,KAAM,SAACC,GACLC,QAAQC,IAAI,aACZL,EAAKC,SAAWE,EAChBH,EAAKM,SAEPC,OAAQ,SAACC,IACPR,EAAKM,QACDE,KACFJ,QAAQC,IAAI,eACZD,QAAQC,IAAIG,GACAR,EAAKC,SAASQ,WAAW,MACjCC,UACFF,EACA,EACA,EACAR,EAAKC,SAASU,MACdX,EAAKC,SAASW,UAiBpBN,MAAO,WAELN,EAAKC,SAASQ,WAAW,MAAMI,UAC7B,EACA,EACAb,EAAKC,SAASU,MACdX,EAAKC,SAASW,WAqCLE,MAhCf,SAAoBC,GAAQ,IAAD,EACOC,oBAAS,GADhB,mBAClBC,EADkB,KACRC,EADQ,KAGnBf,EAAYgB,iBAAO,MAiBzB,OAdAC,qBAAU,WACRF,EAAYH,EAAMM,YACjB,CAACN,EAAMM,WAEVD,qBAAU,WAERpB,EAAKE,KAAKC,EAAUmB,WACnB,IAEHF,qBAAU,WAERpB,EAAKO,OAAOQ,EAAMQ,eACjB,CAACR,EAAMQ,cAGR,sBAAK5B,UAAU,iBAAf,UACE,wBACEE,GAAG,WACH2B,IAAKrB,EACLsB,MAAO,CAAEC,OAAQT,EAAW,gBAAkB,UAEhD,qBAAKpB,GAAG,aAAR,uC,MC9CS8B,MAxBf,WAAoB,IAAD,EACeX,oBAAS,GADxB,mBACVC,EADU,aAEqBD,mBAAS,OAF9B,mBAEVR,EAFU,KAEGoB,EAFH,KAajB,OARAR,qBAAU,WACR,IAAMS,EAAQ,IAAIC,MAClBD,EAAME,OAAS,WACbH,EAAeC,IAEjBA,EAAMG,IAAMC,+BACX,IAGD,sBAAKtC,UAAU,UAAf,UAEE,cAAC,EAAD,CAASuC,UAAWN,IAGpB,cAAC,EAAD,CAAYL,YAAaf,EAAaa,SAAUJ,QCZvCkB,MATf,WACE,OACE,sBAAKxC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCHNyC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a7a38641.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../style/Navbar.css\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <h3>Image Rotator</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"../style/Sidebar.css\";\r\n\r\nfunction Sidebar() {\r\n  return (\r\n    <div className=\"sidebar h-100\">\r\n      <div className=\"sideBarSectionTop\">\r\n        <input\r\n          id=\"uploadImageButton\"\r\n          className=\"button button-blue\"\r\n          type=\"button\"\r\n          value=\"Upload Image\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"horizontalBreak\"></div>\r\n\r\n      <div className=\"sideBarSectionMiddle\">\r\n        <span>\r\n          <strong>File:</strong>\r\n        </span>\r\n        <span>kitten.jpg</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"../style/ImagePanel.css\";\r\n\r\nconst util = {\r\n  Instance: null,\r\n  Init: (canvasRef) => {\r\n    console.log(\"util.Init\");\r\n    util.Instance = canvasRef;\r\n    util.Clear();\r\n  },\r\n  ReDraw: (loadedImage) => {\r\n    util.Clear();\r\n    if (loadedImage) {\r\n      console.log(\"util.ReDraw\");\r\n      console.log(loadedImage);\r\n      const ctx = util.Instance.getContext(\"2d\");\r\n      ctx.drawImage(\r\n        loadedImage,\r\n        0,\r\n        0,\r\n        util.Instance.width,\r\n        util.Instance.height\r\n      );\r\n      // ctx.fillStyle = \"#000000\";\r\n      // ctx.beginPath();\r\n      // ctx.rect(0, 0, util.Instance.width, util.Instance.height);\r\n      // ctx.fill();\r\n      // console.log(\r\n      //   ctx.getImageData(0, 0, util.Instance.width, util.Instance.height)\r\n      // );\r\n\r\n      // TODO #arda\r\n      // const image = new Image();\r\n      // image.src = \"default.png\";\r\n      // ctx.drawImage(image, 0, 0, util.Instance.width, util.Instance.height);\r\n    }\r\n    // Else: defensive - something went wrong\r\n  },\r\n  Clear: () => {\r\n    // clear canvas\r\n    util.Instance.getContext(\"2d\").clearRect(\r\n      0,\r\n      0,\r\n      util.Instance.width,\r\n      util.Instance.height\r\n    );\r\n  },\r\n};\r\n\r\nfunction ImagePanel(props) {\r\n  const [outlined, setOutlined] = useState(true);\r\n  // we have to use a ref, which is a reference to the actual canvas DOM element.\r\n  const canvasRef = useRef(null);\r\n\r\n  // keep an eye on outlined property for border style of our canvas\r\n  useEffect(() => {\r\n    setOutlined(props.Outlined);\r\n  }, [props.Outlined]);\r\n\r\n  useEffect(() => {\r\n    // Initialize Canvas Util Instance, this will be called only once\r\n    util.Init(canvasRef.current);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Re-draw our newly loaded image\r\n    util.ReDraw(props.LoadedImage);\r\n  }, [props.LoadedImage]);\r\n\r\n  return (\r\n    <div className=\"imageContainer\">\r\n      <canvas\r\n        id=\"myCanvas\"\r\n        ref={canvasRef}\r\n        style={{ border: outlined ? \"2px solid red\" : \"none\" }}\r\n      />\r\n      <div id=\"renderTime\">Render Time: HH:MM:SS</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePanel;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport ImagePanel from \"./ImagePanel\";\r\n\r\nimport \"../style/Content.css\";\r\n\r\nfunction Content() {\r\n  const [outlined, setOutlined] = useState(true);\r\n  const [loadedImage, setLoadedImage] = useState(null);\r\n\r\n  // On init give default image as image source\r\n  useEffect(() => {\r\n    const image = new Image();\r\n    image.onload = () => {\r\n      setLoadedImage(image);\r\n    };\r\n    image.src = process.env.PUBLIC_URL + \"/default.png\";\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      {/* this component will set loaded image */}\r\n      <Sidebar LoadImage={setLoadedImage}></Sidebar>\r\n\r\n      {/* this component will use loaded image */}\r\n      <ImagePanel LoadedImage={loadedImage} Outlined={outlined}></ImagePanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Content;\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Content from \"./components/Content\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar></Navbar>\n      <Content></Content>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}